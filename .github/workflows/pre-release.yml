name: Pre-Release Binaries

on:
  push:
    tags:
      - 'v*.*.*-pre'

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for all platforms
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run package -- --mac
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            npm run package -- --linux
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run package -- --win
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: ./release/build/*.{dmg,AppImage,zip,exe}
  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      # - name: Download macOS Build Artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-macos-latest
      #     path: ./release/build/macos

      # - name: Download Windows Build Artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-windows-latest
      #     path: ./release/build/windows

      - name: Download Ubuntu Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: ./release/build/ubuntu

      - name: List downloaded files
        run: ls -R ./release/build

      - name: Generate changelog
        run: npx auto-changelog -p

      - name: Create GitHub Pre-Release
        id: create_pre_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release/build/macos/*.{dmg,AppImage,zip,exe}
            ./release/build/ubuntu/*.{dmg,AppImage,zip,exe}
            ./release/build/windows/*.{dmg,AppImage,zip,exe}
          tag_name: ${{ github.ref }}
          name: Pre-Release ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
