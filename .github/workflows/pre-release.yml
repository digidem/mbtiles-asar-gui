name: Pre-Release Binaries

on:
  push:
    tags:
      - 'v*.*.*-*'

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Python
        if: runner.os == 'macOS'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Build Tools
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
          python -m pip install wheel

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for macOS
        if: matrix.os == 'macos-latest'
        run: npm run package -- --mac

      - name: Build Electron app for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: npm run package -- --linux

      - name: Build Electron app for Windows
        if: matrix.os == 'windows-latest'
        run: npm run package -- --win

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            ./release/build/*.AppImage
            ./release/build/*.exe
            ./release/build/*.dmg
            ./release/build/*.zip

  pre-release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
      - name: Generate changelog
        run: npx auto-changelog -p

      - name: Download macOS Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-latest
          path: ./release/build/macos

      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows-latest
          path: ./release/build/windows

      - name: Download Ubuntu Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: ./release/build/ubuntu

      - name: List downloaded files
        run: ls -R ./release/build

      - name: Generate changelog
        run: npx auto-changelog -p

      - name: Create GitHub Pre-Release
        id: create_pre_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release/build/macos/*.dmg
            ./release/build/ubuntu/*.AppImage
            ./release/build/ubuntu/*.zip
            ./release/build/windows/*.exe
            ./release/build/windows/*.msi
          tag_name: ${{ github.ref }}
          name: Pre-Release ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
