name: Pre-Release Binaries

on:
  push:
    tags:
      - 'v*.*.*-pre'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4  # Stable version
      - uses: actions/setup-node@v4  # Stable version
        with:
          node-version: 20
      - name: Set up Python
        uses: actions/setup-python@v5  # Ensure Python is available
        with:
          python-version: '3.x'
      - name: Install Build Tools
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
          python -m pip install wheel
      - name: Install dependencies
        run: npm install
      - name: Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run package -- --${{ matrix.os == 'macos-latest' && 'mac' || matrix.os == 'ubuntu-latest' && 'linux' || 'win' }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: ./release/build/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download macOS Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-latest
          path: ./release/build/macos
      - name: Download Ubuntu Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: ./release/build/ubuntu
      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows-latest
          path: ./release/build/windows
      - name: List downloaded files
        run: ls -R ./release/build
      - name: Create GitHub Pre-Release
        id: create_pre_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release/build/macos/*.{dmg,AppImage,zip,exe}
            ./release/build/ubuntu/*.{dmg,AppImage,zip,exe}
            ./release/build/windows/*.{dmg,AppImage,zip,exe}
          tag_name: ${{ github.ref }}
          name: Pre-Release ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
